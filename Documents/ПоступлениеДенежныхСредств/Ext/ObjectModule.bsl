Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ДенежныеСредства.Записывать = Истина; 
	Движения.БезналичнаяОплата.Записывать = Истина;
	Движения.Хозрасчетный.Записывать = Истина;
	
	Если ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Наличные Тогда 
		Если ВидОперации = Перечисления.ВидыОперацийПоступленияДенег.ПоступлениеИзДругойКассы Тогда
			Движение = Движения.ДенежныеСредства.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.БанковскийСчетКасса = Касса;
			Движение.ТипДенежныхСредств = ТипДенежныхСредств;
			Движение.Сумма = СуммаДокумента;
			//
			//Движение = Движения.ДенежныеСредства.Добавить();
			//Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			//Движение.Период = Дата;
			//Движение.БанковскийСчетКасса = КассаИсточник;
			//Движение.ТипДенежныхСредств = ТипДенежныхСредств;
			//Движение.Сумма = СуммаДокумента;
			
		Иначе	
			Движение = Движения.ДенежныеСредства.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.БанковскийСчетКасса = Касса;
			Движение.ТипДенежныхСредств = ТипДенежныхСредств;
			Движение.Сумма = СуммаДокумента; 
		КонецЕсли;
		
	ИначеЕсли ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные Тогда 
		Движение = Движения.БезналичнаяОплата.Добавить();
		Движение.Период = Дата;
		Движение.ЭквайринговыйТерминал = ЭквайринговыйТерминал;
		Движение.Сумма = СуммаДокумента;
	КонецЕсли;
	
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);  
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		//ВидОперации = Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя;
		//ДокументОснование = ДанныеЗаполнения.Ссылка;
		//Плательщик = ДанныеЗаполнения.Клиент;
		//Сумма = ДанныеЗаполнения.СуммаДокумента;
		ДанныеДокументаОснования = ПолучитьДанныеПоОплатеПоРеализацииТоваров(ДанныеЗаполнения);     
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеДокументаОснования);
	КонецЕсли;
КонецПроцедуры  

Функция ПолучитьДанныеПоОплатеПоРеализацииТоваров(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|    РеализацияТоваровИУслуг.Клиент КАК Плательщик,
	|    РеализацияТоваровИУслуг.СуммаДокумента КАК СуммаДокумента,
	|    РеализацияТоваровИУслуг.Ссылка КАК ДокументОснование
	|ИЗ
	|    Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|    РеализацияТоваровИУслуг.Ссылка = &Ссылка";
	
	Выборка =  Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	возврат Выборка;
	
КонецФункции

Функция ПолучитьАналитикуПроводки()
	
	ОплатаОтПокупателя         = Перечисления.ВидыОперацийПоступленияДенег.ОплатаОтПокупателя;
	ВозвратОтПоставщика     = Перечисления.ВидыОперацийПоступленияДенег.ВозвратПоставщика;
	ПолучениеНаличныхВБанке = Перечисления.ВидыОперацийПоступленияДенег.ПолучениеНаличныхВБанке;
	ВозвратОтПодотчетника     = Перечисления.ВидыОперацийПоступленияДенег.ВозвратОтПодотчетника;
	ПоступлениеИзДругойКассы =  Перечисления.ВидыОперацийПоступленияДенег.ПоступлениеИзДругойКассы;
	ОплатаПоКарте            = Перечисления.ТипыДенежныхСредств.Безналичные;
	
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.Касса);
	СтруктураАналитики.Вставить("СубконтоДебет", Касса);
	Если ВидОперации = ОплатаОтПокупателя Тогда
		Если ТипДенежныхСредств = ОплатаПоКарте Тогда
			СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.ПереводыВПути);
			СтруктураАналитики.Вставить("СубконтоДебет", ЭквайринговыйТерминал);
			СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата от покупателя банковской картой");
		Иначе
			СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата от покупателя наличными в кассу");
		КонецЕсли;
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	ИначеЕсли ВидОперации = ВозвратОтПоставщика Тогда
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат от поставщика наличными в кассу");
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
	ИначеЕсли ВидОперации = ПолучениеНаличныхВБанке Тогда
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Получение наличных денег с расчетного счета в кассу");
		СтруктураАналитики.Вставить("СубконтоКредит", РасчетныйСчет);
	ИначеЕсли ВидОперации = ВозвратОтПодотчетника Тогда 
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат подотчетных средств"); 
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик); 
	ИначеЕсли ВидОперации = ПоступлениеИзДругойКассы Тогда 
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.Касса);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Поступление с другого счета предприятия"); 
		СтруктураАналитики.Вставить("СубконтоКредит", КассаИсточник);
			КонецЕсли;
	
	Возврат СтруктураАналитики;
	
КонецФункции