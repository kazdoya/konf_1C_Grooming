
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ДенежныеСредства.Записывать = Истина;
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
	Движение.БанковскийСчетКасса = РасчетныйСчет;
	Движение.Сумма = СуммаДокумента; 
	
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	
	Движения.Хозрасчетный.Записывать = Истина;    
	Если ВидОперации = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ВзносНаличными Тогда
		Возврат; //Бухгалтерские проводки по взносу наличными формируются документом Расход денежных средств    
	КонецЕсли;
	
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		Плательщик = ДанныеЗаполнения.Клиент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ВидОперации = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ОплатаОтПокупателя;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов") Тогда
		Плательщик = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ВидОперации = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ВозвратОтПоставщика;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеУслуг") Тогда
		Плательщик = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ВидОперации = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ВозвратОтПоставщика;
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьАналитикуПроводки()
	
	ОплатаОтПокупателя         = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ОплатаОтПокупателя;
	ВозвратОтПоставщика         = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ВозвратОтПоставщика;
	ОплатаПоБанковскимКартам = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ОплатаПоБанковскимКартам;
	ПереводНаДругойСчетПредприятия = Перечисления.ВидыОперацийПоступленияНаРасчетныйСчет.ПоступлениеСДругогоСчетаПредприятия;
	
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	СтруктураАналитики.Вставить("СубконтоДебет", РасчетныйСчет);
	
	Если ВидОперации = ОплатаОтПокупателя Тогда
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата от покупателя на расчетный счет");
	ИначеЕсли ВидОперации = ВозвратОтПоставщика Тогда
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);    
		СтруктураАналитики.Вставить("СубконтоКредит", Плательщик);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат средств поставщику с расчетного счета");
	ИначеЕсли ВидОперации = ОплатаПоБанковскимКартам Тогда 
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.ПереводыВПути);
		СтруктураАналитики.Вставить("СубконтоКредит", ЭквайринговыйТерминал);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Поступление на расчетный счет по операциям с банковскими картами");
	ИначеЕсли ВидОперации = ПереводНаДругойСчетПредприятия Тогда 
		СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		СтруктураАналитики.Вставить("СубконтоКредит", СчетИсточник);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Перевод на другой счет предприятия");
	КонецЕсли;
	
	Возврат СтруктураАналитики;
	
КонецФункции