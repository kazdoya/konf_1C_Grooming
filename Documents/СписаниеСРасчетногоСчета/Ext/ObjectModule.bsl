
Процедура ОбработкаПроведения(Отказ, Режим) 
	
	
	// Регистр "Денежные средства"
	Движения.ДенежныеСредства.Записывать = Истина;
	Движения.ДенежныеСредства.БлокироватьДляИзменения = Истина;
	
	Движение = Движения.ДенежныеСредства.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.ТипДенежныхСредств = Перечисления.ТипыДенежныхСредств.Безналичные;
	Движение.БанковскийСчетКасса = РасчетныйСчет;
	Движение.Сумма = СуммаДокумента;
	
	// Регистр "Журнал бухгалтерских проводок"
	Движения.Хозрасчетный.Записывать = Истина;
	//Бухгалтерские проводки снятию наличных в кассу формируются документом Поступление денежных средств
	Если ВидОперации <> Перечисления.ВидыОперацийСписанияСРасчетногоСчета.СнятиеНаличныхВКассу Тогда
		
		АналитикаПроводки = ПолучитьАналитикуПроводки();
		
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.СчетДт = АналитикаПроводки.СчетДебета;
		Движение.СчетКт = АналитикаПроводки.СчетКредита;
		Движение.Период = Дата;
		Движение.Сумма = СуммаДокумента;
		Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
		БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
		
	КонецЕсли;
	
	Движения.Записать();
	
	// Проверка на что после записи движений не образовались отрицательные остатки
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетныйСчет", РасчетныйСчет);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	Запрос.Текст =
	"ВЫБРАТЬ
	|    ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК РасчетныйСчет,
	|    -ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|    РегистрНакопления.ДенежныеСредства.Остатки(
	|            &МоментВремени,
	|            БанковскийСчетКасса = &РасчетныйСчет
	|                И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)) КАК ДенежныеСредстваОстатки
	|ГДЕ
	|    ДенежныеСредстваОстатки.СуммаОстаток < 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("На счете ""%1"" недостаточно денежных средств для расхода в размере %2", 
		Выборка.РасчетныйСчет, Выборка.Сумма);
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю;
		Получатель = ДанныеЗаполнения.Клиент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов") Тогда
		Получатель = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ВидОперации = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеУслуг") Тогда
		Получатель = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		ВидОперации = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;;
	КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьАналитикуПроводки()
	
	ОплатаПоставщику             = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ОплатаПоставщику;
	ВозвратПокупателю             = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ВозвратПокупателю;
	ПеречислениеПодотчетномуЛицу = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеПодотчетномуЛицу;
	ПеречислениеЗаработнойПлаты     = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПеречислениеЗаработнойПлаты;
	ПереводНаДругойСчетПредприятия   = Перечисления.ВидыОперацийСписанияСРасчетногоСчета.ПереводНаДругойСчетПредприятия;
	
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
	СтруктураАналитики.Вставить("СубконтоКредит", РасчетныйСчет);
	Если ВидОперации = ОплатаПоставщику Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику с расчетного счета");
	ИначеЕсли ВидОперации = ВозвратПокупателю Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);    
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат средств покупателю с расчетного счета");
	ИначеЕсли ВидОперации = ПеречислениеПодотчетномуЛицу Тогда 
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Перечисление подотченику с расчетного счета");
	ИначеЕсли ВидОперации = ПереводНаДругойСчетПредприятия Тогда 
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		СтруктураАналитики.Вставить("СубконтоДебет", СчетПолучателя);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Перевод на другой счет предприятия");
	ИначеЕсли ВидОперации = ПеречислениеЗаработнойПлаты Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Выплата заработной платы на счет сотрудника");        
	КонецЕсли;
	
	Возврат СтруктураАналитики;
	
КонецФункции
