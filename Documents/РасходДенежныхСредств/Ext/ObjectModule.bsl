
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ДенежныеСредства.Записывать = Истина; 
	Движения.ДенежныеСредства.БлокироватьДляИзменения = Истина; 
	//
	//Если ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ПередачаВДругуюКассу  Тогда 
	//	Движение = Движения.ДенежныеСредства.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = Дата;
	//	Движение.БанковскийСчетКасса = Касса;
	//	Движение.ТипДенежныхСредств = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Наличные");
	//	Движение.Сумма = СуммаДокумента;
	//	
	//	Движение = Движения.ДенежныеСредства.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//	Движение.Период = Дата;
	//	Движение.БанковскийСчетКасса = КассаПолучатель;
	//	Движение.ТипДенежныхСредств = ПредопределенноеЗначение("Перечисление.ТипыДенежныхСредств.Наличные");
	//	Движение.Сумма = СуммаДокумента;
	//	
	//Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст=
		"ВЫБРАТЬ
		|    РасходДенежныхСредств.Дата КАК Период,
		|    РасходДенежныхСредств.Касса КАК БанковскийСчетКасса,
		|    РасходДенежныхСредств.СуммаДокумента КАК Сумма,
		|    ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств
		|ИЗ
		|    Документ.РасходДенежныхСредств КАК РасходДенежныхСредств
		|ГДЕ
		|    РасходДенежныхСредств.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|    РасходДенежныхСредств.Дата,
		|    РасходДенежныхСредств.Касса,
		|    РасходДенежныхСредств.СуммаДокумента";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ДенежныеСредства.ДобавитьРасход();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
		КонецЦикла;	
		Движения.Записать();
	//КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Касса", Касса);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Запрос.Текст=
	"ВЫБРАТЬ
	|    ДенежныеСредстваОстатки.БанковскийСчетКасса.Представление КАК Касса,
	|    -ДенежныеСредстваОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|    РегистрНакопления.ДенежныеСредства.Остатки(
	|            &МоментВремени,
	|            БанковскийСчетКасса = &Касса
	|                И ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)) КАК ДенежныеСредстваОстатки
	|ГДЕ
	|    ДенежныеСредстваОстатки.СуммаОстаток < 0";
	
	Рез = Запрос.Выполнить();
	Если НЕ Рез.Пустой() Тогда
		Отказ = Истина;
		Выборка = Рез.Выбрать();
		Выборка.Следующий();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("По кассе ""%1"" недостаточно денежных средств для расхода в размере %2", Выборка.Касса, Выборка.Сумма);
		Сообщение.Сообщить();
	КонецЕсли; 
	////////////////	
	АналитикаПроводки = ПолучитьАналитикуПроводки();
	Движения.Хозрасчетный.Записывать = Истина;
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = АналитикаПроводки.СчетДебета;
	Движение.СчетКт = АналитикаПроводки.СчетКредита;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = АналитикаПроводки.СодержаниеОперации;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, АналитикаПроводки.СубконтоДебет);
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, АналитикаПроводки.СубконтоКредит);
	Движения.Записать();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорПоставщика;
		Получатель = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровИМатериалов") Тогда
		ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорПоставщика;
		Получатель = ДанныеЗаполнения.Поставщик;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровИУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийРасходаДенег.ВозвратДенегПокупателю;
		Получатель = ДанныеЗаполнения.Клиент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьАналитикуПроводки()
	
	ОплатаПоставщику         = Перечисления.ВидыОперацийРасходаДенег.ОплатаПоставщику;
	ВозвратДенегПокупателю     = Перечисления.ВидыОперацийРасходаДенег.ВозвратДенегПокупателю;
	ВыдачаДенегПодотчетнику     = Перечисления.ВидыОперацийРасходаДенег.ВыдачаДенегПодотчетнику;
	ВзносНаличнымиВБанк         = Перечисления.ВидыОперацийРасходаДенег.ВзносНаличнымиВБанк;    
	ПередачаВДругуюКассу  =      Перечисления.ВидыОперацийРасходаДенег.ПередачаВДругуюКассу;
	
	СтруктураАналитики = Новый Структура;
	СтруктураАналитики.Вставить("СчетКредита", ПланыСчетов.Хозрасчетный.Касса);
	СтруктураАналитики.Вставить("СубконтоКредит", Касса);
	
	Если ВидОперации = ОплатаПоставщику Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Оплата поставщику наличными из кассы");
	ИначеЕсли ВидОперации = ВозвратДенегПокупателю Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);    
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Возврат покупателю наличными из кассы");
	ИначеЕсли ВидОперации = ВыдачаДенегПодотчетнику Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами);
		СтруктураАналитики.Вставить("СубконтоДебет", Получатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Выдача в подотчет наличных из кассы");
	ИначеЕсли ВидОперации = ПередачаВДругуюКассу Тогда
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.Касса);
		СтруктураАналитики.Вставить("СубконтоДебет", КассаПолучатель);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Передача в другую кассу");
	ИначеЕсли ВидОперации = ВзносНаличнымиВБанк Тогда 
		СтруктураАналитики.Вставить("СчетДебета", ПланыСчетов.Хозрасчетный.РасчетныеСчета);
		СтруктураАналитики.Вставить("СубконтоДебет", РасчетныйСчет);
		СтруктураАналитики.Вставить("СодержаниеОперации", "Взнос наличными в банк");
	КонецЕсли;
	Возврат СтруктураАналитики;
	
КонецФункции
