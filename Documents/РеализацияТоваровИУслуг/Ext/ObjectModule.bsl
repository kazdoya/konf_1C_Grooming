
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		Основание = ДанныеЗаполнения.Ссылка;
		ДатаОказанияУслуги = ДанныеЗаполнения.ДатаЗаписи;
		Для Каждого ТекСтрокаОписаниеУслуг Из ДанныеЗаполнения.ОписаниеУслуг Цикл
			НоваяСтрока = ОписаниеУслуги.Добавить();
			НоваяСтрока.Услуга = ТекСтрокаОписаниеУслуг.Услуга;
			НоваяСтрока.Сумма = ТекСтрокаОписаниеУслуг.Сумма;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	СуммаДокумента = Товары.Итог("Сумма") + ОписаниеУслуги.Итог("Сумма");
	Если ЗначениеЗаполнено(Ссылка)
		И ПризнакОплаты <> Перечисления.ТипыОплатыДокумента.ПолностьюОплачен Тогда
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Ссылка);
		ПризнакОплаты = СтруктураОплаты.ПризнакОплаты;
	КонецЕсли;
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина; 
	Движения.ТоварыНаСкладах.Записать();
	 Движения.Хозрасчетный.Записывать    = Истина;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);//1
	ЭлементБлокировки.ИсточникДанных = Товары; //2
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровИУслугТовары.Товар КАК Номенклатура,
	|	РеализацияТоваровИУслуг.Склад КАК Склад,
	|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|		ПО РеализацияТоваровИУслуг.Ссылка = РеализацияТоваровИУслугТовары.Ссылка
	|ГДЕ
	|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугТовары.Товар,
	|	РеализацияТоваровИУслуг.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровИУслугОписаниеУслуги.Услуга,
	|	NULL,
	|	NULL,
	|	СУММА(РеализацияТоваровИУслугОписаниеУслуги.Сумма)
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.ОписаниеУслуги КАК РеализацияТоваровИУслугОписаниеУслуги
	|ГДЕ
	|	РеализацияТоваровИУслугОписаниеУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугОписаниеУслуги.Услуга
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ВТ_Товары.Количество КАК КоличествоВДокументе,
	|	ВТ_Товары.Сумма КАК СуммаВДокументе,
	|	ВТ_Товары.Склад КАК Склад,
	|	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				(Номенклатура, Склад) В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Номенклатура,
	|						ВТ_Товары.Склад
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.СрокГодности
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе),
	|	МАКСИМУМ(СуммаВДокументе),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл //1
		Если ВыборкаНоменклатура.ЭтоТовар Тогда //2   
			СтоимостьОбщая = 0; //3
			
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток; //4
			Если Превышение > 0 И Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить() Тогда //5 
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
			
			Если Отказ Тогда //6
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе; //7
			
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			//Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл //8
			//	Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
			//	Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
			//	Движение.Период = Дата;
			//	Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
			//	Движение.Склад = Склад;
			//	Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
			//	Движение.Количество = Списываем;
			//	Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда //9
			//		СуммаСписания = ВыборкаДетальные.СуммаОстаток;
			//	Иначе
			//		СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
			//	КонецЕсли;
			//	Движение.Сумма = СуммаСписания; 
			//	
			//	ОсталосьСписать = ОсталосьСписать - Списываем; //10
			//	СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
				//Если ОсталосьСписать > 0 Тогда
				//	Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				//	Движение.Период = Дата;
				//	Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
				//	Движение.Склад = Склад;
				//	Движение.Количество = ОсталосьСписать;
				//	Движение.Сумма = СтоимостьОбщая / ВыборкаНоменклатура.КоличествоОстаток * ОсталосьСписать;
				//КонецЕсли;
				//Проводка по списанию товаров и материалов Дт90 Кт10/41
			//	Движение = Движения.Хозрасчетный.Добавить();
			//	Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
			//	Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета;
			//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаДетальные.Номенклатура; 
			//	Движение.Период    = Дата;    
			//	Движение.Сумма = СуммаСписания;
			//	Движение.Содержание    = "Списана себестоимость товарно-материальных ценностей";
			//	
			//КонецЦикла;
			 Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл //8
                Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
                Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
                Движение.Период = Дата;
                Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
                Движение.Склад = Склад;
                Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
                Движение.Количество = Списываем;
                Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда //9
                    СуммаСписания = ВыборкаДетальные.СуммаОстаток;
                Иначе
                    СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
                КонецЕсли;
                Движение.Сумма = СуммаСписания; 
                ОсталосьСписать = ОсталосьСписать - Списываем; //10
                СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
            КонецЦикла;
            //вынесла за цикл, т.к. мы должны вначале обойти все детальные записи и списать номенклатуру с учетом сроков годности, а затем и есть превышение - сформировать запись по его списанию.
            Если ОсталосьСписать > 0 Тогда
                Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
                Движение.Период = Дата;
                Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура; //не забудь поменять когда вынесешь за цикл детальных записей.
                Движение.Склад = Склад;
                Движение.Количество = ОсталосьСписать;
                Движение.Сумма = СтоимостьОбщая / ВыборкаНоменклатура.КоличествоОстаток * ОсталосьСписать; 
                СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
            КонецЕсли;   
            //Проводка по списанию товаров и материалов Дт90 Кт10/41 (также вынесли за цикл, т.к. на этом счете нет субконто СрокГодности
                Движение = Движения.Хозрасчетный.Добавить();
                Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
                Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета;
                Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаНоменклатура.Номенклатура; 
                Движение.Период    = Дата;
                Движение.Сумма = СуммаСписания;
                Движение.Содержание    = "Списана себестоимость товарно-материальных ценностей";
				
////////////////////				
			Движение = Движения.УчетЗатрат.Добавить(); //11
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
		Иначе
			Если ЗначениеЗаполнено(Основание) Тогда
				Движение = Движения.ЗаказыКлиентов.Добавить(); //12
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Клиент = Клиент;
				Движение.ДатаЗаписи = ДатаОказанияУслуги;
				Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
			КонецЕсли;
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить(); //13
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Сотрудник = Сотрудник;
		Движение.Клиент = Клиент;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
		
		
	КонецЦикла;	
	///////////
	
	Если Не ЗначениеЗаполнено(Основание) Тогда
		Возврат;
	КонецЕсли;  
	//Проводка по отражению выручки Дт62 Кт90
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Клиент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";
	
	Движения.ЗаказыКлиентов.БлокироватьДляИзменения = Истина; //1
	Движения.ЗаказыКлиентов.Записать();
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ЗаказыКлиентовОстатки.Клиент КАК Клиент,
	|	ЗаказыКлиентовОстатки.ДатаЗаписи КАК ДатаЗаписи,
	|	ЗаказыКлиентовОстатки.Клиент.Представление КАК КлиентПредставление
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Остатки(&МоментВремени, Клиент = &Клиент И ДатаЗаписи = &ДатаЗаписи) КАК ЗаказыКлиентовОстатки
	|ГДЕ
	|   ЗаказыКлиентовОстатки.СуммаОстаток < 0";
	
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("ДатаЗаписи", ДатаОказанияУслуги);
	
	Результат = Запрос.Выполнить(); 
	
	Если Не Результат.Пустой()ИЛИ Не ЗначениеЗаполнено(Основание) Тогда 
		Отказ = Истина;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Услуга ""%1"" для клиента ""%2""  на дату ""%3"" уже была обработана или не была найдена такая запись!", Основание, Выборка.КлиентПредставление, Формат(Выборка.ДатаЗаписи, "ДФ=dd.MM.yy"));
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

