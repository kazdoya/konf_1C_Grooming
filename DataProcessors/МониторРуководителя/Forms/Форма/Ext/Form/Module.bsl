 &НаСервере
 Процедура ЗаполнитьДанныеНаСервере()
	 ЗаполнитьЧисловыеПоказатели();
	 ЗаполнитьГистограммы();
	 ЗаполнитьКруговыеДиаграммы();
	 ЗаполнитьДанныеПоПитомцам();
 КонецПроцедуры           
 
 &НаКлиенте
 Процедура Обновить(Команда)    
	 ЗаполнитьДанныеНаСервере();
 КонецПроцедуры 
 
 &НаСервере
 Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 ПериодОбработки = НачалоМесяца(ТекущаяДата()); 
	 МесяцСтрокой = Формат(ПериодОбработки, "ДФ='ММММ гггг'");
	 ЗаполнитьДанныеНаСервере();
	 ДатаЗагрузкиНовостей = Текущаядата();
	 ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере();
	 КоличествоНовостей = 10;
	 СтрокаПоиска = "Бизнес";
	 ЯзыкПоиска = Истина;
	 ЗагрузитьНовостиНаСервере();
 КонецПроцедуры
 
 &НаКлиенте
 Процедура МесяцСтрокойНажатие(Элемент, СтандартнаяОбработка)
	 СтандартнаяОбработка = Ложь; 
	 Подсказка = "Введите период получения данных";
	 ЧастьДаты = ЧастиДаты.Дата;
	 Оповещение = Новый ОписаниеОповещения("ПослеВводаПериода",ЭтотОбъект); 
	 ПоказатьВводДаты(Оповещение, ПериодОбработки, Подсказка, ЧастьДаты);
 КонецПроцедуры
 
 &НаКлиенте
 Процедура ПослеВводаПериода(Результат, ДополнительныеПараметры) Экспорт    
	 Если Результат <> Неопределено Тогда
		 ПериодОбработки = НачалоМесяца(Результат);
		 МесяцСтрокой = Формат(ПериодОбработки, "ДФ='ММММ гггг'");
	 КонецЕсли;    
	 ЗаполнитьДанныеНаСервере();
 КонецПроцедуры 
 
 &НаСервере
 Процедура ЗаполнитьЧисловыеПоказатели()    
	 
	 Запрос = Новый Запрос;
	 Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки); 
	 Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	 
	 Запрос.Текст=
	 "ВЫБРАТЬ
	 |    ПродажиОбороты.Регистратор КАК Регистратор,
	 |    ПродажиОбороты.СуммаОборот КАК СуммаОборот,
	 |    ПродажиОбороты.КоличествоОборот КАК КоличествоОборот
	 |ПОМЕСТИТЬ ВТ_Продажи
	 |ИЗ
	 |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК ПродажиОбороты
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    СУММА(ВТ_Продажи.СуммаОборот) КАК СуммаОборот
	 |ИЗ
	 |    ВТ_Продажи КАК ВТ_Продажи
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    СУММА(ВТ_Продажи.СуммаОборот) КАК СуммаОборот,
	 |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Продажи.Регистратор) КАК Регистратор
	 |ПОМЕСТИТЬ ВТ_КоличествоРегистраторов
	 |ИЗ
	 |    ВТ_Продажи КАК ВТ_Продажи
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    ВЫБОР
	 |        КОГДА ВТ_КоличествоРегистраторов.Регистратор = 0
	 |            ТОГДА 0
	 |        ИНАЧЕ ВЫРАЗИТЬ(ВТ_КоличествоРегистраторов.СуммаОборот / ВТ_КоличествоРегистраторов.Регистратор КАК ЧИСЛО(10, 2))
	 |    КОНЕЦ КАК СреднийЧек
	 |ИЗ
	 |    ВТ_КоличествоРегистраторов КАК ВТ_КоличествоРегистраторов
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    ЗаказыКлиентов.Регистратор КАК Регистратор
	 |ПОМЕСТИТЬ ВТ_ЗаписиКлиентов
	 |ИЗ
	 |    РегистрНакопления.ЗаказыКлиентов КАК ЗаказыКлиентов
	 |ГДЕ
	 |    ЗаказыКлиентов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	 |    И ЗаказыКлиентов.Регистратор ССЫЛКА Документ.ЗаписьКлиента
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаписиКлиентов.Регистратор) КАК КоличествоЗаписейКлиентов
	 |ИЗ
	 |    ВТ_ЗаписиКлиентов КАК ВТ_ЗаписиКлиентов
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаписиКлиентов.Регистратор) КАК Завершенных
	 |ИЗ
	 |    ВТ_ЗаписиКлиентов КАК ВТ_ЗаписиКлиентов
	 |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	 |        ПО ВТ_ЗаписиКлиентов.Регистратор = РеализацияТоваровИУслуг.Основание
	 |ГДЕ
	 |    РеализацияТоваровИУслуг.Проведен";
	 
	 ВсегоЗаписей = 0; 
	 
	 РезультатПакет = Запрос.ВыполнитьПакет(); 	 
	 ВыборкаПродажи = РезультатПакет[1].Выбрать(); 
	 Если ВыборкаПродажи.Следующий() Тогда
		 ВыручкаЧисло = ВыборкаПродажи.СуммаОборот;
	 КонецЕсли;
	 
	 ВыборкаСреднийЧек = РезультатПакет[3].Выбрать();
	 Если ВыборкаСреднийЧек.Следующий() Тогда
		 СреднийЧек = ВыборкаСреднийЧек.СреднийЧек;
	 КонецЕсли;
	 
	 ВыборкаЗаписиКлиентов = РезультатПакет[5].Выбрать();
	 Если ВыборкаЗаписиКлиентов.Следующий() Тогда
		 ВсегоЗаписей = ВыборкаЗаписиКлиентов.КоличествоЗаписейКлиентов;
	 КонецЕсли;
	 
	 ВыборкаЗаписиКлиентовЗавершенные = РезультатПакет[6].Выбрать();
	 Если ВыборкаЗаписиКлиентовЗавершенные.Следующий() Тогда
		 Завершенных = ВыборкаЗаписиКлиентовЗавершенные.Завершенных;
		 Если ВсегоЗаписей> 0 Тогда
			 ПроцентЗавершенных = ОКР((100*Завершенных/ВсегоЗаписей),2);
			 ЗавершенныхПроцентСтрока = СтрШаблон("Это %1 процентов от всех записей", ПроцентЗавершенных); 
		 Иначе
			 ЗавершенныхПроцентСтрока = "В этом периоде нет записей клиентов!";
		 КонецЕсли;
	 КонецЕсли;
	 
 КонецПроцедуры 
 
 &НаСервере
 Процедура ЗаполнитьГистограммы()
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |    НачалоПериода(Продажи.Период, День) КАК Период,
	 |    Продажи.СуммаОборот КАК СуммаОборот
	 |ИЗ
	 |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |    Период
	 |ИТОГИ
	 |    СУММА(СуммаОборот)
	 |ПО
	 |    Период ПЕРИОДАМИ(ДЕНЬ, &ДатаНачала, &ДатаОкончания)";
	 
	 Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	 Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	 
	 ДиаграммаВыручка.Обновление = Ложь; //1
	 ДиаграммаВыручка.Очистить();
	 
	 Серия = ДиаграммаВыручка.Серии.Добавить("Оборот"); //2
	 Серия.Цвет = WebЦвета.ЛососьСветлый;
	 
	 Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период", "Все"); //3
	 НомерЗаписи = 0;
	 ТекущийОстаток = 0;
	 ОстатокВчера = 0;
	 Пока Выборка.Следующий() Цикл
		 
		 Точка = ДиаграммаВыручка.Точки.Добавить(Выборка.Период); //4
		 Точка.Текст = Формат(Выборка.Период, "ДФ=dd.MM.yy"); //5
		 Точка.Расшифровка = Выборка.Период;
		 Подсказка = "Выручка " + Выборка.СуммаОборот + " на " + Формат(Выборка.Период, "ДФ=dd.MM.yyyy"); 
		 ДиаграммаВыручка.УстановитьЗначение(Точка, Серия, Выборка.СуммаОборот, Точка.Расшифровка, Подсказка);//6
		 
	 КонецЦикла;
	 
	 ДиаграммаВыручка.Обновление = Истина; //7
	 
 КонецПроцедуры   
 
 &НаСервере
 Процедура ЗаполнитьКруговыеДиаграммы() 
	 ЗаполнитьДиаграммуПоИсточникамИнформации();
	 ЗаполнитьДиаграммуПоСотрудникам();
	 ЗаполнитьДиаграммуПоУслугам();
 КонецПроцедуры     
 
 Процедура ЗаполнитьДиаграммуПоУслугам()
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |    Продажи.Номенклатура КАК Номенклатура,
	 |    СУММА(Продажи.СуммаОборот) КАК СуммаОборот
	 |ПОМЕСТИТЬ ВТ_КонкретныеУслуги
	 |ИЗ
	 |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК Продажи
	 |
	 |СГРУППИРОВАТЬ ПО
	 |    Продажи.Номенклатура
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    СУММА(ПродажиОбороты.СуммаОборот) КАК СуммаОборот
	 |ПОМЕСТИТЬ ВТ_ВсеПродажи
	 |ИЗ
	 |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) КАК ПродажиОбороты
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    ВТ_КонкретныеУслуги.Номенклатура КАК Номенклатура,
	 |    ВТ_КонкретныеУслуги.СуммаОборот КАК СуммаПродажНоменклатуры,
	 |    ВТ_ВсеПродажи.СуммаОборот КАК ОбщаяСуммаПоУслугам
	 |ПОМЕСТИТЬ ВТ_Предытог
	 |ИЗ
	 |    ВТ_КонкретныеУслуги КАК ВТ_КонкретныеУслуги
	 |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеПродажи КАК ВТ_ВсеПродажи
	 |        ПО (ИСТИНА)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |    ВЫБОР
	 |        КОГДА 100 * ВТ_Предытог.СуммаПродажНоменклатуры / ВТ_Предытог.ОбщаяСуммаПоУслугам > 10
	 |            ТОГДА ВТ_Предытог.Номенклатура.Представление
	 |        ИНАЧЕ ""Прочее""
	 |    КОНЕЦ КАК Номенклатура,
	 |    СУММА(ВТ_Предытог.СуммаПродажНоменклатуры) КАК Сумма
	 |ИЗ
	 |    ВТ_Предытог КАК ВТ_Предытог
	 |
	 |СГРУППИРОВАТЬ ПО
	 |    ВЫБОР
	 |        КОГДА 100 * ВТ_Предытог.СуммаПродажНоменклатуры / ВТ_Предытог.ОбщаяСуммаПоУслугам > 10
	 |            ТОГДА ВТ_Предытог.Номенклатура.Представление
	 |        ИНАЧЕ ""Прочее""
	 |    КОНЕЦ";
	 
	 Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	 Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	 
	 ДиаграммаПоУслугам.Обновление = Ложь; //1
	 ДиаграммаПоУслугам.Очистить();
	 
	 Точка = ДиаграммаПоУслугам.Точки.Добавить("Сумма"); //2
	 Точка.Текст = "Сумма";
	 Точка.ПриоритетЦвета = Ложь;
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл
		 
		 Серия = ДиаграммаПоУслугам.Серии.Добавить(Выборка.Номенклатура); //3
		 ДиаграммаПоУслугам.УстановитьЗначение(Точка, Серия, Выборка.Сумма, Строка(Выборка.Сумма));
		 
	 КонецЦикла;
	 
	 ДиаграммаПоУслугам.Обновление = Истина;
	 
 КонецПроцедуры
 
 Процедура ЗаполнитьДиаграммуПоИсточникамИнформации()
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |    ЕСТЬNULL(Продажи.Клиент.ОткудаУзналиОНас.Представление, ""Не указан"") КАК ИсточникИнформации,
	 |    СУММА(Продажи.КоличествоОборот) КАК Количество
	 |ИЗ
	 |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
	 |ГДЕ
	 |    Продажи.КоличествоОборот <> 0
	 |
	 |СГРУППИРОВАТЬ ПО
	 |    ЕСТЬNULL(Продажи.Клиент.ОткудаУзналиОНас.Представление, ""Не указан"")";
	 
	 Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	 Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	 
	 ДиаграммаПоРекламнымИсточникам.Обновление = Ложь;
	 ДиаграммаПоРекламнымИсточникам.Очистить();
	 
	 Точка = ДиаграммаПоРекламнымИсточникам.Точки.Добавить("Количество");
	 Точка.Текст = "Количество";
	 Точка.ПриоритетЦвета = Ложь;
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл
		 
		 Серия = ДиаграммаПоРекламнымИсточникам.Серии.Добавить(Выборка.ИсточникИнформации);
		 ДиаграммаПоРекламнымИсточникам.УстановитьЗначение(Точка, Серия, Выборка.Количество, Строка(Выборка.Количество));
		 
	 КонецЦикла;
	 
	 ДиаграммаПоРекламнымИсточникам.Обновление = Истина;
	 
 КонецПроцедуры
 
 Процедура ЗаполнитьДиаграммуПоСотрудникам()
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |    СУММА(Продажи.СуммаОборот) КАК Сумма,
	 |    Продажи.Сотрудник.Представление КАК Сотрудник
	 |ИЗ
	 |    РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК Продажи
	 |ГДЕ
	 |    Продажи.КоличествоОборот <> 0
	 |
	 |СГРУППИРОВАТЬ ПО
	 |    Продажи.Сотрудник.Представление";
	 
	 Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки);
	 Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодОбработки));
	 
	 ДиаграммаВыручкаПоСотрудникам.Обновление = Ложь;
	 ДиаграммаВыручкаПоСотрудникам.Очистить();
	 
	 Точка = ДиаграммаВыручкаПоСотрудникам.Точки.Добавить("Сумма");
	 Точка.Текст = "Сумма";
	 Точка.ПриоритетЦвета = Ложь;
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл
		 
		 Серия = ДиаграммаВыручкаПоСотрудникам.Серии.Добавить(Выборка.Сотрудник);
		 ДиаграммаВыручкаПоСотрудникам.УстановитьЗначение(Точка, Серия, Выборка.Сумма, Строка(Выборка.Сумма));
		 
	 КонецЦикла;
	 
	 ДиаграммаВыручкаПоСотрудникам.Обновление = Истина;
	 
 КонецПроцедуры
 
 Процедура ЗаполнитьДанныеПоПитомцам() 
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |	КонтрагентыПитомцы.Ссылка КАК Ссылка,
	 |	КонтрагентыПитомцы.ВидПитомца КАК ВидПитомца
	 |ПОМЕСТИТЬ ВТ_КотоПсы
	 |ИЗ
	 |	Справочник.Контрагенты.Питомцы КАК КонтрагентыПитомцы
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	 |		ПО КонтрагентыПитомцы.Ссылка = Контрагенты.Ссылка
	 |ГДЕ
	 |	Контрагенты.ТипКонтрагента = ЗНАЧЕНИЕ(Перечисление.ТипыКонтрагента.Клиент)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_КотоПсы.ВидПитомца КАК Питомец,
	 |	КОЛИЧЕСТВО(ВТ_КотоПсы.ВидПитомца) КАК КоличествоПитомцев
	 |ИЗ
	 |	ВТ_КотоПсы КАК ВТ_КотоПсы
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	ВТ_КотоПсы.ВидПитомца"; 
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 Пока Выборка.Следующий() Цикл	 
		 Если Выборка.Питомец = Перечисления.ВидыПитомцев.Кошка Тогда
			 КоличествоКошек = Выборка.КоличествоПитомцев;
		 ИначеЕсли Выборка.Питомец = Перечисления.ВидыПитомцев.Собака Тогда
			 КоличествоСобак = Выборка.КоличествоПитомцев;
		 КонецЕсли; 
	 КонецЦикла;
	 ВсегоПитомцев = КоличествоКошек + КоличествоСобак;
	 ПроцентКошек = ОКР((100*КоличествоКошек/ВсегоПитомцев),0);
	 ПроцентСобак = ОКР((100*КоличествоСобак/ВсегоПитомцев),0);
	 ПроцентСобакСтрока = СтрШаблон("Собак — %1 (%2%%)", КоличествоСобак, ПроцентСобак);
	 ПроцентКошекСтрока = СтрШаблон("Кошек — %1 (%2%%)", КоличествоКошек, ПроцентКошек);
 КонецПроцедуры
 
 &НаСервере
 Процедура ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере()
	 
	 Сервер = "cbr.ru"; //1
	 АдресЗапроса = "/scripts/XML_daily.asp?date_req=" + Формат(Текущаядата(), "ДФ=dd/MM/yyyy"); //2
	 
	 ВозвращаемоеЗначение = РаботаСHTTP.ПолучитьДанныеИзСервиса(Сервер, АдресЗапроса); //3
	 
	 Если ВозвращаемоеЗначение.УспешныйЗапрос = Ложь Тогда //4
		 Сообщить(ВозвращаемоеЗначение.ТекстОшибки);
		 возврат;
	 ИначеЕсли ВозвращаемоеЗначение.HTTPОтвет.КодСостояния <> 200 Тогда //5
		 Сообщить(СтрШаблон("Код вернул код состояния, отличный от 200: %1", ВозвращаемоеЗначение.HTTPОтвет.КодСостояния));
		 возврат;
	 КонецЕсли;
	 
	 СтрокаXML = ВозвращаемоеЗначение.HTTPОтвет.ПолучитьТелоКакСтроку(); //6
	 ПрочитатьИзXMLПоследовательно(СтрокаXML); //7
	 
 КонецПроцедуры   
 
 &НаСервере
 Процедура ПрочитатьИзXMLПоследовательно(СтрокаXML)
	 
	 ЧтениеXML = Новый ЧтениеXML;
	 ЧтениеXML.УстановитьСтроку(СтрокаXML); //1
	 
	 Валюта = Неопределено;
	 
	 Пока ЧтениеXML.Прочитать() Цикл //2
		 
		 Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			 
			 НужнаяВалюта = Ложь;
			 
			 Пока ЧтениеXML.ПрочитатьАтрибут() Цикл //3
				 Если  ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01235" Тогда
					 Валюта = "USD";
				 ИначеЕсли ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01239" Тогда
					 Валюта = "EURO";
				 ИначеЕсли ЧтениеXML.Имя = "ID" И ЧтениеXML.Значение = "R01335" Тогда
					 Валюта = "KZT";
				 Иначе
					 Валюта = Неопределено;
				 КонецЕсли;
			 КонецЦикла;
		 КонецЕсли;
		 
		 Если Валюта <> Неопределено
			 И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
			 И ЧтениеXML.Имя = "VunitRate" Тогда
			 ЧтениеXML.Прочитать();
			 Если Валюта = "USD" Тогда //4
				 КурсДоллараНаСегодня = ЧтениеXML.Значение;
			 ИначеЕсли Валюта = "EURO" Тогда
				 КурсЕвроНаСегодня = ЧтениеXML.Значение;
			 ИначеЕсли Валюта = "KZT" Тогда
				 КурсТенгеНаСегодня = ЧтениеXML.Значение*100;
			 КонецЕсли;
		 КонецЕсли;
	 КонецЦикла;
	 
	 ЧтениеXML.Закрыть();
	 
 КонецПроцедуры
 
 &НаСервере
 Процедура ЗагрузитьНовостиНаСервере()
	 
	 ТопНовости = "";
	 
	 Если ЯзыкПоиска Тогда
		 Язык = "ru";
	 Иначе
		 Язык = "en";
	 КонецЕсли;
	 
	 Сервер = "newsapi.org"; 
	 АдресЗапроса = "/v2/everything";
	 ПараметрыЗапроса = СтрШаблон("apiKey=%1&language=%2&sortBy=popularity&from=%3&q=%4", СокрЛП(Константы.API_KEY_newsapi.Получить()), Язык,
	 Формат(ДатаЗагрузкиНовостей, "ДФ=yyyy-dd-MM"), СокрЛП(СтрокаПоиска)); //1
	 
	 АдресЗапроса = АдресЗапроса + "?" + ПараметрыЗапроса; //2
	 
	 ВозвращаемоеЗначение = РаботаСHTTP.ПолучитьДанныеИзСервиса(Сервер, АдресЗапроса); //3
	 
	 Если ВозвращаемоеЗначение.УспешныйЗапрос = Ложь Тогда //4
		 Сообщить(ВозвращаемоеЗначение.ТекстОшибки);
		 возврат;
	 ИначеЕсли ВозвращаемоеЗначение.HTTPОтвет.КодСостояния <> 200 Тогда
		 Сообщить(СтрШаблон("Код вернул код состояния, отличный от 200: %1", ВозвращаемоеЗначение.HTTPОтвет.КодСостояния));
		 возврат;
	 КонецЕсли;
	 
	 СтрокаJSON = ВозвращаемоеЗначение.HTTPОтвет.ПолучитьТелоКакСтроку(); //5
	 
	 ЧтениеJSON = Новый ЧтениеJSON;
	 ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	 Новости = ПрочитатьJSON(ЧтениеJSON, Ложь);
	 ЧтениеJSON.Закрыть();
	 
	 Итератор = 1;
	 
	 Если Новости <> Неопределено Тогда //6
		 Для Каждого Статья Из Новости.articles Цикл
			 ТопНовости = ТопНовости + Строка(Итератор) + ") " + "Источник: " + Статья.url + Символы.ПС + Статья.title + Символы.ПС;
			 ТопНовости = ТопНовости + Статья.description + Символы.ПС + Символы.ПС;
			 Если Итератор = КоличествоНовостей Тогда
				 прервать;
			 КонецЕсли;
			 Итератор = Итератор + 1;
		 КонецЦикла;
	 Конецесли;
	 
 КонецПроцедуры 
 
 &НаКлиенте
 Процедура ОбновитьНовости(Команда)
	 ПолучитьКурсыВалютПоДаннымЦентробанкаНаСервере();
	 //ТопНовостей.Очистить();
	 ЗагрузитьНовостиНаСервере();
 КонецПроцедуры
